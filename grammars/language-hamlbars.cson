'name': "Hamlbars"
'scopeName': "source.hamlbars"
'fileTypes': [
	"hamlbars"
]

'patterns': [
	{
		'include': '#main'
	}
]

'repository':
	'main':
		'patterns': [
			{'include': '#all_filters'}
			{'include': '#dash-hash-comments'}
			{'include': '#hamlbars'}
			{'include': '#yfm'}
			{'include': '#block_comments'}
			{'include': '#comments'}
			{'include': '#block_helper'}
			{'include': '#end_block'}
			{'include': '#partial_and_var'}
			{'include': '#entities'}
			{'include': '#doctype'}
		]

	'doctype':
		'patterns':	[
			'match': '^(!!!)($|\\s.*)'
			'name': 'meta.tag.doctype.hamlbars'
			'captures':
				'1':
					'name': 'entity.name.tag.hamlbars'
				'2':
					'name': 'entity.name.tag.hamlbars'
		]

	'block_comments':
		'patterns': [
			{
				'begin': '\\{\\{!--'
				'end': '--\\}\\}'
				'name': 'comment.block.hamlbars'
				'patterns': [
					{
						'match': '@\\w*'
						'name': 'keyword.annotation.hamlbars'
					}
					{'include': '#comments'}
				]
			}
			{
				'begin': '<!--'
				'captures':
					'0':
						'name': 'punctuation.definition.comment.html'
				'end': '-{2,3}\\s*>'
				'name': 'comment.block.html'
				'patterns': [
					{
						'match': '--'
						'name': 'invalid.illegal.bad-comments-or-CDATA.html'
					}
				]
			}
		]

	'comments':
		'comment': 'Merge with block_comments above?'
		'patterns': [
			{
				'begin': '\\{\\{![^<]'
				'end': '\\}\\}'
				'name': 'comment.block.hamlbars'
				'patterns': [
					{
						'match': '@\\w*'
						'name': 'keyword.annotation.hamlbars'
					}
					{'include': '#comments'}
				]
			}
		]

	'dash-hash-comments':
		'patterns': [
			{
				'match': '-#.*?$'
				'name': 'comment.line.hamlbars'
			}
			{
				'match': '^\\s*?-#.*?$'
				'name': 'comment.line.hamlbars'
			}
		]

	'block_helper':
		'begin': '(\\{\\{)(~?\\#([-a-zA-Z0-9_\\./]+))\\s?+(@?[-a-zA-Z0-9_\\./]+)*'
		'beginCaptures':
			'1':
				'name': 'entity.name.function.hamlbars'
			'2':
				'name': 'variable.parameter.hamlbars'
			'3':
				'name': 'variable.parameter.hamlbars'
			'4':
				'name': 'none.hamlbars'
		'end': '(~?\\}\\})'
		'endCaptures':
			'1':
				'name': 'entity.name.function.hamlbars'
		'name': 'meta.function.block.start.hamlbars'
		'patterns': [
			{'include': '#string'}
		]

	'end_block':
		'begin': '(\\{\\{)(~?/([a-zA-Z0-9_\\.-]+))\\s*'
		'beginCaptures':
			'1':
				'name': 'entity.name.function.hamlbars'
			'2':
				'name': 'variable.parameter.hamlbars'
		'end': '(~?\\}\\})'
		'endCaptures':
			'1':
				'name': 'entity.name.function.hamlbars'
		'name': 'meta.function.block.end.hamlbars'
		'patterns': []

	'entities':
		'comment': 'HTML entities such as &nbsp; &#960; &#x0aff;'
		'patterns': [
			{
				'captures':
					'1':
						'name': 'punctuation.definition.entity.html'
					'3':
						'name': 'punctuation.definition.entity.html'
				'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
				'name': 'constant.character.entity.html'
			}
			{
				'match': '&'
				'name': 'invalid.illegal.bad-ampersand.html'
			}
		]

	'escaped-double-quote':
		'match': "\\\\\""
		'name': 'constant.character.escape.js'

	'escaped-single-quote':
		'match': "\\\\'"
		'name': 'constant.character.escape.js'

	'hamlbars':
		'patterns': [
			{
				'begin': "^\\s*(?:((%)([\\w:]+))|(?=\\.|#))"
				'captures':
					'1':
						'name': 'meta.tag.hamlbars'
					'2':
						'name': 'punctuation.definition.tag.hamlbars'
					'3':
						'name': 'entity.name.tag.hamlbars'
				'end': '$|(?!\\.|#|\\{|\\[|=|-|~|/)'
				'patterns': [
					{
						'begin': '=='
						'contentName': 'string.quoted.double.ruby'
						'end': '$\\n?'
						'patterns': [
							{'include': '#interpolated_ruby'}
						]
					}
					{
						'match': '\\.[\\w-]+'
						'name': 'support.class.hamlbars'
					}
					{
						'match': '/'
						'name': 'punctuation.terminator.tag.hamlbars'
					}
					{
						'match': '#[\\w-]+'
						'name': 'support.class.hamlbars'
					}
					{
						'begin': '\\{(?=.*\\}|.*\\|\\s*$)'
						'end': '\\}|$|^(?!.*\\|\\s*$)'
						'name': 'meta.section.attributes.hamlbars'
						'patterns': [
							{
								'begin': "(\"|\\')"
								'beginCaptures':
									"0":
										'name': 'string.quoted.double.hamlbars'
								'end': '\\1'
								# 'end': '[^\\\\]\\1'
								'endCaptures':
									'0':
										'name': 'string.quoted.double.hamlbars'
								'contentName': 'string.quoted.hamlbars'
								'patterns': [
									{
										'match': "(\\{{2,3}+)+[ ]*([a-zA-Z0-9\\._-]*+)(?:([ ].*?)(\\}{2,3})|(\\}{2,3}))"
										'captures':
											'1':
												'name': 'entity.name.function.hamlbars'
											'2':
												'name': 'variable.parameter.hamlbars'
											'3':
												'name': 'none.none-parameter.hamlbars'
											'4':
												'name': 'entity.name.function.hamlbars'
											'5':
												'name': 'entity.name.function.hamlbars'
									}
								]
							}
							{'include': 'source.ruby.rails'}
							{'include': '#continuation'}
						]
					}
					{
						'begin': '\\[(?=.*\\]|.*\\|\\s*$)'
						'end': '\\]|$|^(?!.*\\|\\s*$)'
						'name': 'meta.section.object.hamlbars'
						'patterns': [
							{'include': 'source.ruby.rails'}
							{'include': '#continuation'}
						]
					}
					{'include': '#rubyline'}
				]
			}
			{
				'begin': '^\\s*=='
				'contentName': 'string.quoted.double.ruby'
				'end': '$\\n?'
				'patterns': [
					{'include': '#interpolated_ruby'}
				]
			}
			{
				'comment': '/ comments for a single line'
				'captures':
					'1':
						'name': 'punctuation.section.comment.hamlbars'
				'match': '^ *(/)\\s*\\S.*$\\n?'
				'name': 'comment.line.slash.hamlbars'
			}
			{
				'comment': '/ comments for a block'
				'begin': '^( *)(/)\\s*$'
				'beginCaptures':
					'2':
						'name': 'punctuation.section.comment.hamlbars'
				'end': '^(?!\\1  )'
				'name': 'comment.block.hamlbars'
			}
			{
				'captures':
					'1':
						'name': 'meta.escape.hamlbars'
				'match': '^\\s*(\\\\.)'
			}
			{
				'begin': '^\\s*(?==|-|~)'
				'end': '$'
				'patterns': [
					{'include': '#rubyline'}
				]
			}
		]

	'partial_and_var':
		'begin': '(\\{\\{~?\\{*(>|!<)*)\\s*(@?[-a-zA-Z0-9_\\./]+)*'
		'beginCaptures':
			'1':
				'name': 'entity.name.function.hamlbars'
			'3':
				'name': 'variable.parameter.hamlbars'
		'end': '(~?\\}\\}\\}*)'
		'endCaptures':
			'1':
				'name': 'entity.name.function.hamlbars'
		'name': 'meta.function.inline.other.hamlbars'
		'patterns': [
			{'include': '#string'}
		]

	'string':
		'patterns': [
			{'include': '#string-single-quoted'}
			{'include': '#string-double-quoted'}
		]

	'string-double-quoted':
		'begin': "\""
		'beginCaptures':
			"0":
				'name': 'punctuation.definition.string.begin.html'
		'end': "\""
		'endCaptures':
			"0":
				'name': 'punctuation.definition.string.end.html'
		'name': 'string.quoted.double.hamlbars'
		'patterns': [
			{'include': '#escaped-double-quote'}
			{'include': '#block_comments'}
			{'include': '#comments'}
			{'include': '#block_helper'}
			{'include': '#end_block'}
			{'include': '#partial_and_var'}
		]

	'string-single-quoted':
		'begin': "'"
		'beginCaptures':
			'0':
				'name': 'punctuation.definition.string.begin.html'
		'end': "'"
		'endCaptures':
			'0':
				'name': 'punctuation.definition.string.end.html'
		'name': 'string.quoted.single.hamlbars'
		'patterns': [
			{'include': '#escaped-single-quote'}
			{'include': '#block_comments'}
			{'include': '#comments'}
			{'include': '#block_helper'}
			{'include': '#end_block'}
			{'include': '#partial_and_var'}
		]

	'yfm':
		'patterns': [
			{
				'begin': '(?<!\\s)---\\n$'
				'end': '^---\\s'
				'name': 'markup.raw.yaml.front-matter'
				'patterns': [
					{'include': 'source.yaml'}
				]
			}
		]

	'all_filters':
		'patterns': [
			{
				'begin': '^(\\s*)(:javascript)$'
				'beginCaptures':
					'2':
						'name': 'entity.name.tag.embedded.javascript'
				'end': '^(?!\\1\\s+)'
				'patterns': [
					{'include': 'source.js'}
				]
			}
			{
				'begin': '^(\\s*)(:coffee)$'
				'beginCaptures':
					'2':
						'name': 'entity.name.tag.embedded.coffeescript'
				'end': '^(?!\\1\\s+)'
				'patterns': [
 					{'include': 'source.coffee'}
				]
			}
			{
				'begin': '(^\\s*)(:css)$'
				'beginCaptures':
					'2':
						'name': 'entity.name.tag.embedded.css'
				'end': '^(?!\\1\\s+)'
				'patterns': [
 					{'include': 'source.css'}
				]
			}
			{
				'begin': '(^\\s*)(:less)$'
				'beginCaptures':
					'2':
						'name': 'entity.name.tag.embedded.less'
				'end': '^(?!\\1\\s+)'
				'patterns': [
 					{'include': 'source.css.less'}
				]
			}
			{
				'begin': '(^\\s*)(:scss)$'
				'beginCaptures':
					'2':
						'name': 'entity.name.tag.embedded.sass'
				'end': '^(?!\\1\\s+)'
				'patterns': [
 					{'include': 'source.css.scss'}
				]
			}
			{
				'begin': '(^\\s*)(:sass)$'
				'beginCaptures':
					'2':
						'name': 'entity.name.tag.embedded.sass'
				'end': '^(?!\\1\\s+)'
				'patterns': [
 					{'include': 'source.sass'}
				]
			}
			{
				'begin': '(^\\s*)(:markdown)$'
				'beginCaptures':
					'2':
						'name': 'entity.name.tag.embedded.markdown'
				'end': '^(?!\\1\\s+)'
				'patterns': [
 					{'include': 'source.gfm'}
				]
			}
			{
				'begin': '(^\\s*)(:erb)$'
				'beginCaptures':
					'2':
						'name': 'entity.name.tag.embedded.erb'
				'end': '^(?!\\1\\s+)'
				'patterns': [
 					{'include': 'text.html.erb'}
				]
			}
			{
				'begin': '(^\\s*)(:ruby)$'
				'beginCaptures':
					'2':
						'name': 'entity.name.tag.embedded.ruby'
				'end': '^(?!\\1\\s+)'
				'patterns': [
 					{'include': 'source.ruby'}
				]
			}
			{
				'begin': '(^\\s*)(:(?:preserve|escaped|plain|cdata))$'
				'beginCaptures':
					'2':
						'name': 'entity.name.tag.embedded.other'
				'end': '^(?!\\1\\s+)'
				'contentName': 'none'
			}
		]
